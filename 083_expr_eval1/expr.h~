#include <cstdlib>
#include <sstream>
#include <string>

class Expression {
 public:
  virtual std::string toString() const = 0;
  virtual ~Expression() {}
};

class NumExpression : public Expression {
  long num;

 public:
  NumExpression(long a) : num(a) {}
  virtual std::string toString() const {
    std::stringstream sstream;
    sstream << num;
    return sstream.str();
  }
};

class PlusExpression : public Expression {
  Expression * lhs1;
  Expression * rhs1;

 public:
  PlusExpression(Expression * lhs, Expression * rhs) : lhs1(lhs), rhs1(rhs) {}
  virtual std::string toString() const {
    std::stringstream sstream;
    sstream << '(' << lhs1->toString() << " + " << rhs1->toString() << ')';
    return sstream.str();
  }
  virtual ~PlusExpression() {
    delete lhs1;
    delete rhs1;
  }
};
